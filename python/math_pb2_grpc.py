# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import math_pb2 as math__pb2


class MathStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Sqrt = channel.unary_unary(
        '/Math/Sqrt',
        request_serializer=math__pb2.SqrtRequest.SerializeToString,
        response_deserializer=math__pb2.SqrtResponse.FromString,
        )
    self.Stat = channel.stream_unary(
        '/Math/Stat',
        request_serializer=math__pb2.StatRequest.SerializeToString,
        response_deserializer=math__pb2.StatResponse.FromString,
        )


class MathServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Sqrt(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stat(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MathServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Sqrt': grpc.unary_unary_rpc_method_handler(
          servicer.Sqrt,
          request_deserializer=math__pb2.SqrtRequest.FromString,
          response_serializer=math__pb2.SqrtResponse.SerializeToString,
      ),
      'Stat': grpc.stream_unary_rpc_method_handler(
          servicer.Stat,
          request_deserializer=math__pb2.StatRequest.FromString,
          response_serializer=math__pb2.StatResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Math', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
