// Code generated by protoc-gen-go. DO NOT EDIT.
// source: math.proto

package math

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SqrtRequest struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SqrtRequest) Reset()         { *m = SqrtRequest{} }
func (m *SqrtRequest) String() string { return proto.CompactTextString(m) }
func (*SqrtRequest) ProtoMessage()    {}
func (*SqrtRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_178bd8ad938da8df, []int{0}
}
func (m *SqrtRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SqrtRequest.Unmarshal(m, b)
}
func (m *SqrtRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SqrtRequest.Marshal(b, m, deterministic)
}
func (dst *SqrtRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqrtRequest.Merge(dst, src)
}
func (m *SqrtRequest) XXX_Size() int {
	return xxx_messageInfo_SqrtRequest.Size(m)
}
func (m *SqrtRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SqrtRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SqrtRequest proto.InternalMessageInfo

func (m *SqrtRequest) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SqrtResponse struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SqrtResponse) Reset()         { *m = SqrtResponse{} }
func (m *SqrtResponse) String() string { return proto.CompactTextString(m) }
func (*SqrtResponse) ProtoMessage()    {}
func (*SqrtResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_178bd8ad938da8df, []int{1}
}
func (m *SqrtResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SqrtResponse.Unmarshal(m, b)
}
func (m *SqrtResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SqrtResponse.Marshal(b, m, deterministic)
}
func (dst *SqrtResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqrtResponse.Merge(dst, src)
}
func (m *SqrtResponse) XXX_Size() int {
	return xxx_messageInfo_SqrtResponse.Size(m)
}
func (m *SqrtResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SqrtResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SqrtResponse proto.InternalMessageInfo

func (m *SqrtResponse) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type StatRequest struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatRequest) Reset()         { *m = StatRequest{} }
func (m *StatRequest) String() string { return proto.CompactTextString(m) }
func (*StatRequest) ProtoMessage()    {}
func (*StatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_178bd8ad938da8df, []int{2}
}
func (m *StatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatRequest.Unmarshal(m, b)
}
func (m *StatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatRequest.Marshal(b, m, deterministic)
}
func (dst *StatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatRequest.Merge(dst, src)
}
func (m *StatRequest) XXX_Size() int {
	return xxx_messageInfo_StatRequest.Size(m)
}
func (m *StatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatRequest proto.InternalMessageInfo

func (m *StatRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type StatResponse struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatResponse) Reset()         { *m = StatResponse{} }
func (m *StatResponse) String() string { return proto.CompactTextString(m) }
func (*StatResponse) ProtoMessage()    {}
func (*StatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_178bd8ad938da8df, []int{3}
}
func (m *StatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatResponse.Unmarshal(m, b)
}
func (m *StatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatResponse.Marshal(b, m, deterministic)
}
func (dst *StatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatResponse.Merge(dst, src)
}
func (m *StatResponse) XXX_Size() int {
	return xxx_messageInfo_StatResponse.Size(m)
}
func (m *StatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatResponse proto.InternalMessageInfo

func (m *StatResponse) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *StatResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type FactorRequest struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactorRequest) Reset()         { *m = FactorRequest{} }
func (m *FactorRequest) String() string { return proto.CompactTextString(m) }
func (*FactorRequest) ProtoMessage()    {}
func (*FactorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_178bd8ad938da8df, []int{4}
}
func (m *FactorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactorRequest.Unmarshal(m, b)
}
func (m *FactorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactorRequest.Marshal(b, m, deterministic)
}
func (dst *FactorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactorRequest.Merge(dst, src)
}
func (m *FactorRequest) XXX_Size() int {
	return xxx_messageInfo_FactorRequest.Size(m)
}
func (m *FactorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FactorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FactorRequest proto.InternalMessageInfo

func (m *FactorRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type FactorResponse struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactorResponse) Reset()         { *m = FactorResponse{} }
func (m *FactorResponse) String() string { return proto.CompactTextString(m) }
func (*FactorResponse) ProtoMessage()    {}
func (*FactorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_178bd8ad938da8df, []int{5}
}
func (m *FactorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactorResponse.Unmarshal(m, b)
}
func (m *FactorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactorResponse.Marshal(b, m, deterministic)
}
func (dst *FactorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactorResponse.Merge(dst, src)
}
func (m *FactorResponse) XXX_Size() int {
	return xxx_messageInfo_FactorResponse.Size(m)
}
func (m *FactorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FactorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FactorResponse proto.InternalMessageInfo

func (m *FactorResponse) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*SqrtRequest)(nil), "SqrtRequest")
	proto.RegisterType((*SqrtResponse)(nil), "SqrtResponse")
	proto.RegisterType((*StatRequest)(nil), "StatRequest")
	proto.RegisterType((*StatResponse)(nil), "StatResponse")
	proto.RegisterType((*FactorRequest)(nil), "FactorRequest")
	proto.RegisterType((*FactorResponse)(nil), "FactorResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathClient is the client API for Math service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathClient interface {
	Sqrt(ctx context.Context, in *SqrtRequest, opts ...grpc.CallOption) (*SqrtResponse, error)
	Stat(ctx context.Context, opts ...grpc.CallOption) (Math_StatClient, error)
	Factor(ctx context.Context, in *FactorRequest, opts ...grpc.CallOption) (Math_FactorClient, error)
}

type mathClient struct {
	cc *grpc.ClientConn
}

func NewMathClient(cc *grpc.ClientConn) MathClient {
	return &mathClient{cc}
}

func (c *mathClient) Sqrt(ctx context.Context, in *SqrtRequest, opts ...grpc.CallOption) (*SqrtResponse, error) {
	out := new(SqrtResponse)
	err := c.cc.Invoke(ctx, "/Math/Sqrt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathClient) Stat(ctx context.Context, opts ...grpc.CallOption) (Math_StatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[0], "/Math/Stat", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathStatClient{stream}
	return x, nil
}

type Math_StatClient interface {
	Send(*StatRequest) error
	CloseAndRecv() (*StatResponse, error)
	grpc.ClientStream
}

type mathStatClient struct {
	grpc.ClientStream
}

func (x *mathStatClient) Send(m *StatRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathStatClient) CloseAndRecv() (*StatResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StatResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mathClient) Factor(ctx context.Context, in *FactorRequest, opts ...grpc.CallOption) (Math_FactorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[1], "/Math/Factor", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathFactorClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Math_FactorClient interface {
	Recv() (*FactorResponse, error)
	grpc.ClientStream
}

type mathFactorClient struct {
	grpc.ClientStream
}

func (x *mathFactorClient) Recv() (*FactorResponse, error) {
	m := new(FactorResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MathServer is the server API for Math service.
type MathServer interface {
	Sqrt(context.Context, *SqrtRequest) (*SqrtResponse, error)
	Stat(Math_StatServer) error
	Factor(*FactorRequest, Math_FactorServer) error
}

func RegisterMathServer(s *grpc.Server, srv MathServer) {
	s.RegisterService(&_Math_serviceDesc, srv)
}

func _Math_Sqrt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqrtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServer).Sqrt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Math/Sqrt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServer).Sqrt(ctx, req.(*SqrtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Math_Stat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathServer).Stat(&mathStatServer{stream})
}

type Math_StatServer interface {
	SendAndClose(*StatResponse) error
	Recv() (*StatRequest, error)
	grpc.ServerStream
}

type mathStatServer struct {
	grpc.ServerStream
}

func (x *mathStatServer) SendAndClose(m *StatResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathStatServer) Recv() (*StatRequest, error) {
	m := new(StatRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Math_Factor_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FactorRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MathServer).Factor(m, &mathFactorServer{stream})
}

type Math_FactorServer interface {
	Send(*FactorResponse) error
	grpc.ServerStream
}

type mathFactorServer struct {
	grpc.ServerStream
}

func (x *mathFactorServer) Send(m *FactorResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Math_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Math",
	HandlerType: (*MathServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sqrt",
			Handler:    _Math_Sqrt_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stat",
			Handler:       _Math_Stat_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Factor",
			Handler:       _Math_Factor_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "math.proto",
}

func init() { proto.RegisterFile("math.proto", fileDescriptor_math_178bd8ad938da8df) }

var fileDescriptor_math_178bd8ad938da8df = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0x2c, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe6, 0xe2, 0x0e, 0x2e, 0x2c, 0x2a, 0x09, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60,
	0x54, 0x60, 0xd4, 0x60, 0x0c, 0x82, 0x70, 0x94, 0x54, 0xb8, 0x78, 0x20, 0x8a, 0x8a, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x71, 0xa8, 0x02, 0x19, 0x55, 0x92, 0x88, 0xdd, 0x28, 0x56, 0x98, 0x22, 0x33,
	0x2e, 0x1e, 0x88, 0x22, 0xa8, 0x51, 0x02, 0x5c, 0xcc, 0xc5, 0xa5, 0xb9, 0x50, 0x35, 0x20, 0x26,
	0x48, 0x5f, 0x72, 0x7e, 0x69, 0x5e, 0x89, 0x04, 0x13, 0x44, 0x1f, 0x98, 0xa3, 0xa4, 0xca, 0xc5,
	0xeb, 0x96, 0x98, 0x5c, 0x92, 0x5f, 0x84, 0xdf, 0x78, 0x35, 0x2e, 0x3e, 0x98, 0x32, 0x6c, 0x6e,
	0x85, 0xa9, 0x33, 0x6a, 0x65, 0xe4, 0x62, 0xf1, 0x4d, 0x2c, 0xc9, 0x10, 0x52, 0xe5, 0x62, 0x01,
	0x79, 0x4d, 0x88, 0x47, 0x0f, 0x29, 0x18, 0xa4, 0x78, 0xf5, 0x90, 0xfd, 0xab, 0xc4, 0x20, 0xa4,
	0xce, 0xc5, 0x02, 0x72, 0x36, 0x48, 0x19, 0xc2, 0x8b, 0x20, 0x65, 0x48, 0x7e, 0x51, 0x62, 0xd0,
	0x60, 0x14, 0xd2, 0xe5, 0x62, 0x83, 0x38, 0x40, 0x88, 0x4f, 0x0f, 0xc5, 0xc1, 0x52, 0xfc, 0x7a,
	0xa8, 0x2e, 0x53, 0x62, 0x30, 0x60, 0x4c, 0x62, 0x03, 0xc7, 0x82, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0xcf, 0xc5, 0xca, 0x02, 0x93, 0x01, 0x00, 0x00,
}
